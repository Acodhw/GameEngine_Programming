// header.h: 표준 시스템 포함 파일
// 또는 프로젝트 특정 포함 파일이 들어 있는 포함 파일입니다.
//

#pragma once

#include "targetver.h"
#define WIN32_LEAN_AND_MEAN             // 거의 사용되지 않는 내용을 Windows 헤더에서 제외합니다.
// Windows 헤더 파일
#include <windows.h>
// C 런타임 헤더 파일
#include <stdlib.h>
#include <malloc.h>
#include <memory.h>
#include <tchar.h>

// C++ 런타임 헤더 파일
#include <vector>

// 정적 라이브러리
//
// 장점
// 시스템 환경이 바뀌어도 앱에 영향 없음
// 컴파일시 필요한 라이브러리를 적재하기 때문에 이식성이 좋다
// 런타임시 외부 참조 필요가 없어 속도가 빠르다
//
// 단점
// 같은 코드를 가진 프로그램이 실행할 경우가 있다면 코드가 중복될 수 있다 => 메모리 낭비
// 라이브러리 변경시 라이브러리만 재배포X => 다시 컴파일해서 재베포해야함


// 동적 라이르러리
// 
// 장점
// 메모리 절약
// 보다 쉽게 업그레이드 해서 베포가능
// 서로 다른 프로그램에서 동일한 함수를 호출가능
// 프로그램 변경시 라이브러리만 재배포하면 됨 => 유지보수 좋음
//
// 단점
// 외부의존도가 높기때문에 이식성이 낮다
// 공유라이브러리를 메모리 올리려면 찾고 해당 라이브러리를 찾아서 접근해야되기때문에 속도가 느리다